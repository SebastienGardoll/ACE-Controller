package fr.gardoll.ace.controller.ui.autosampler ;

import fr.gardoll.ace.controller.ui.AbstractJPanelObserver ;
import fr.gardoll.ace.controller.ui.Action ;
import fr.gardoll.ace.controller.ui.ControlPanel ;
import fr.gardoll.ace.controller.ui.Observer ;

public class AutosamplerToolPanel extends AbstractJPanelObserver
    implements ControlPanel, Observer
{
  private static final long serialVersionUID = -3286878572452437372L ;

  /**
   * Creates new form AutosamplerToolPanel
   */
  public AutosamplerToolPanel()
  {
    initComponents() ;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints ;

    logPanel = new javax.swing.JPanel() ;
    logTextScrollPane = new javax.swing.JScrollPane() ;
    logTextArea = new javax.swing.JTextArea() ;
    buttonPanel = new javax.swing.JPanel() ;
    cancelButton = new javax.swing.JButton() ;
    pauseButton = new javax.swing.JButton() ;
    closeButton = new javax.swing.JButton() ;
    buttonFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
        new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0)) ;
    carouselPanel = new javax.swing.JPanel() ;
    positionPanel = new javax.swing.JPanel() ;
    positionLabel = new javax.swing.JLabel() ;
    positionSpinner = new javax.swing.JSpinner() ;
    positionButton = new javax.swing.JButton() ;
    arrowPanel = new javax.swing.JPanel() ;
    leftButton = new javax.swing.JButton() ;
    rightButton = new javax.swing.JButton() ;
    manualPanel = new javax.swing.JPanel() ;
    manualButton = new javax.swing.JButton() ;
    armPanel = new javax.swing.JPanel() ;
    freePositionPanel = new javax.swing.JPanel() ;
    freePositionLabel = new javax.swing.JLabel() ;
    freePositionSpinner = new javax.swing.JSpinner() ;
    freePositionButton = new javax.swing.JButton() ;
    vibrationPanel = new javax.swing.JPanel() ;
    vibrationButton = new javax.swing.JButton() ;
    refPositionPanel = new javax.swing.JPanel() ;
    toStopLabel = new javax.swing.JLabel() ;
    toStopButton = new javax.swing.JButton() ;
    aboveColumnLabel = new javax.swing.JLabel() ;
    openFileChooserButton = new javax.swing.JButton() ;
    aboveColumnButton = new javax.swing.JButton() ;
    toTrashBinLabel = new javax.swing.JLabel() ;
    toTrashBinButton = new javax.swing.JButton() ;

    setLayout(new java.awt.GridBagLayout()) ;

    logPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log",
        javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
        javax.swing.border.TitledBorder.DEFAULT_POSITION,
        new java.awt.Font("Lucida Grande", 0, 15))) ; // NOI18N
    logPanel.setLayout(new java.awt.GridBagLayout()) ;

    logTextScrollPane.setHorizontalScrollBarPolicy(
        javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS) ;
    logTextScrollPane.setVerticalScrollBarPolicy(
        javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS) ;

    logTextArea.setColumns(20) ;
    logTextArea.setRows(5) ;
    logTextArea.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        logTextAreaMouseClicked(evt) ;
      }
    }) ;
    logTextScrollPane.setViewportView(logTextArea) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.ipadx = 221 ;
    gridBagConstraints.ipady = 61 ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    logPanel.add(logTextScrollPane, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.gridwidth = 2 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    add(logPanel, gridBagConstraints) ;

    buttonPanel.setLayout(new java.awt.GridBagLayout()) ;

    cancelButton.setText("cancel") ;
    cancelButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        cancelButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    buttonPanel.add(cancelButton, gridBagConstraints) ;

    pauseButton.setText("pause") ;
    pauseButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        pauseButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    buttonPanel.add(pauseButton, gridBagConstraints) ;

    closeButton.setText("close") ;
    closeButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        closeButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 3 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    buttonPanel.add(closeButton, gridBagConstraints) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 2 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    buttonPanel.add(buttonFiller, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 2 ;
    gridBagConstraints.gridwidth = 2 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    add(buttonPanel, gridBagConstraints) ;

    carouselPanel.setBorder(
        javax.swing.BorderFactory.createTitledBorder(null, "Carousel controls",
            javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
            javax.swing.border.TitledBorder.DEFAULT_POSITION,
            new java.awt.Font("Lucida Grande", 0, 15))) ; // NOI18N
    carouselPanel.setLayout(new java.awt.GridBagLayout()) ;

    positionPanel
        .setBorder(javax.swing.BorderFactory.createTitledBorder("Position")) ;
    positionPanel.setPreferredSize(new java.awt.Dimension(100, 50)) ;
    positionPanel.setLayout(new java.awt.GridBagLayout()) ;

    positionLabel.setText("position number") ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.gridwidth = 2 ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    positionPanel.add(positionLabel, gridBagConstraints) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    positionPanel.add(positionSpinner, gridBagConstraints) ;

    positionButton.setText("go") ;
    positionButton.setPreferredSize(new java.awt.Dimension(34, 26)) ;
    positionButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        positionButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    positionPanel.add(positionButton, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    carouselPanel.add(positionPanel, gridBagConstraints) ;

    arrowPanel.setBorder(
        javax.swing.BorderFactory.createTitledBorder("Quarter circle")) ;
    arrowPanel.setLayout(new java.awt.GridBagLayout()) ;

    leftButton.setText("<<") ;
    leftButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        leftButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    arrowPanel.add(leftButton, gridBagConstraints) ;

    rightButton.setText(">>") ;
    rightButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        rightButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    arrowPanel.add(rightButton, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    carouselPanel.add(arrowPanel, gridBagConstraints) ;

    manualPanel.setBorder(
        javax.swing.BorderFactory.createTitledBorder("Manual setting")) ;
    manualPanel.setLayout(new java.awt.GridBagLayout()) ;

    manualButton.setText("activate") ;
    manualButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        manualButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    manualPanel.add(manualButton, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 2 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    carouselPanel.add(manualPanel, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    add(carouselPanel, gridBagConstraints) ;

    armPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
        "Arm controls", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
        javax.swing.border.TitledBorder.DEFAULT_POSITION,
        new java.awt.Font("Lucida Grande", 0, 15))) ; // NOI18N
    armPanel.setLayout(new java.awt.GridBagLayout()) ;

    freePositionPanel.setBorder(
        javax.swing.BorderFactory.createTitledBorder("Free position")) ;
    freePositionPanel.setLayout(new java.awt.GridBagLayout()) ;

    freePositionLabel.setText("distance in millimeter") ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.gridwidth = 2 ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    freePositionPanel.add(freePositionLabel, gridBagConstraints) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    freePositionPanel.add(freePositionSpinner, gridBagConstraints) ;

    freePositionButton.setText("go") ;
    freePositionButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        freePositionButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    freePositionPanel.add(freePositionButton, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    armPanel.add(freePositionPanel, gridBagConstraints) ;

    vibrationPanel
        .setBorder(javax.swing.BorderFactory.createTitledBorder("Vibration")) ;
    vibrationPanel.setLayout(new java.awt.GridBagLayout()) ;

    vibrationButton.setText("activate") ;
    vibrationButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        vibrationButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    vibrationPanel.add(vibrationButton, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    armPanel.add(vibrationPanel, gridBagConstraints) ;

    refPositionPanel.setBorder(
        javax.swing.BorderFactory.createTitledBorder("Referenced position")) ;
    refPositionPanel.setLayout(new java.awt.GridBagLayout()) ;

    toStopLabel.setText("to top stop:") ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(toStopLabel, gridBagConstraints) ;

    toStopButton.setText("go") ;
    toStopButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        toStopButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 2 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(toStopButton, gridBagConstraints) ;

    aboveColumnLabel.setText("above column:") ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(aboveColumnLabel, gridBagConstraints) ;

    openFileChooserButton.setText("open") ;
    openFileChooserButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        openFileChooserButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(openFileChooserButton, gridBagConstraints) ;

    aboveColumnButton.setText("go") ;
    aboveColumnButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        aboveColumnButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 2 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(aboveColumnButton, gridBagConstraints) ;

    toTrashBinLabel.setText("to trash bin:") ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 2 ;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(toTrashBinLabel, gridBagConstraints) ;

    toTrashBinButton.setText("go") ;
    toTrashBinButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      @Override
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        toTrashBinButtonMouseClicked(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 2 ;
    gridBagConstraints.gridy = 2 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    refPositionPanel.add(toTrashBinButton, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 2 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    armPanel.add(refPositionPanel, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    add(armPanel, gridBagConstraints) ;
  }// </editor-fold>

  private void closeButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void positionButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void leftButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void rightButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void manualButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void pauseButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void freePositionButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void vibrationButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void toStopButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void openFileChooserButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void aboveColumnButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void toTrashBinButtonMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  private void logTextAreaMouseClicked(java.awt.event.MouseEvent evt)
  {
    // TODO add your handling code here:
  }

  // Variables declaration - do not modify
  private javax.swing.JButton aboveColumnButton ;
  private javax.swing.JLabel aboveColumnLabel ;
  private javax.swing.JPanel armPanel ;
  private javax.swing.JPanel arrowPanel ;
  private javax.swing.Box.Filler buttonFiller ;
  private javax.swing.JPanel buttonPanel ;
  private javax.swing.JButton cancelButton ;
  private javax.swing.JPanel carouselPanel ;
  private javax.swing.JButton closeButton ;
  private javax.swing.JButton freePositionButton ;
  private javax.swing.JLabel freePositionLabel ;
  private javax.swing.JPanel freePositionPanel ;
  private javax.swing.JSpinner freePositionSpinner ;
  private javax.swing.JButton leftButton ;
  private javax.swing.JPanel logPanel ;
  private javax.swing.JTextArea logTextArea ;
  private javax.swing.JScrollPane logTextScrollPane ;
  private javax.swing.JButton manualButton ;
  private javax.swing.JPanel manualPanel ;
  private javax.swing.JButton openFileChooserButton ;
  private javax.swing.JButton pauseButton ;
  private javax.swing.JButton positionButton ;
  private javax.swing.JLabel positionLabel ;
  private javax.swing.JPanel positionPanel ;
  private javax.swing.JSpinner positionSpinner ;
  private javax.swing.JPanel refPositionPanel ;
  private javax.swing.JButton rightButton ;
  private javax.swing.JButton toStopButton ;
  private javax.swing.JLabel toStopLabel ;
  private javax.swing.JButton toTrashBinButton ;
  private javax.swing.JLabel toTrashBinLabel ;
  private javax.swing.JButton vibrationButton ;
  private javax.swing.JPanel vibrationPanel ;
  // End of variables declaration

  @Override
  public void enableControl(boolean isEnable)
  {
    // TODO Auto-generated method stub
    // Disable cancel and pause when controls are enable.
  }

  @Override
  protected void processAction(Action action)
  {
    // TODO Auto-generated method stub

  }
}