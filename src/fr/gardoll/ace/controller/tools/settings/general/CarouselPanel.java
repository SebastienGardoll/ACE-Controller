package fr.gardoll.ace.controller.tools.settings.general ;

import java.io.File ;
import java.nio.file.Path ;

import javax.swing.JFileChooser ;
import javax.swing.filechooser.FileFilter ;

import fr.gardoll.ace.controller.core.Utils ;
import fr.gardoll.ace.controller.settings.ConfigurationException ;
import fr.gardoll.ace.controller.settings.GeneralSettings ;
import fr.gardoll.ace.controller.settings.Names ;

public class CarouselPanel extends javax.swing.JPanel implements Panel
{
  private static final long serialVersionUID = 8805075279790623310L ;

  public static final String NAME = "carousel" ;
  
  private GeneralSettings _settings = GeneralSettings.instance();
  
  private JFileChooser _fileChooser = new JFileChooser() ;

  public CarouselPanel() throws ConfigurationException
  {
    initComponents() ;
    initCustom();
    load();
  }
  
  private void initCustom()
  {
    this._fileChooser.setDialogTitle("select carousel file") ;
    this._fileChooser.setCurrentDirectory(Names.CAROUSEL_DIR_PATH.toFile()) ;
    this._fileChooser.setMultiSelectionEnabled(false) ;
    this._fileChooser.setFileFilter(new FileFilter()
    {
      @Override
      public boolean accept(File f)
      {
        if (f.isDirectory())
        {
          return true ;
        }
        else
        {
          String fileName = f.getName() ;
          String file_extention = Utils.getFileExtention(fileName) ;
          return Names.CAROUSEL_FILE_EXTENTION.equals(file_extention) ;
        }
      }

      @Override
      public String getDescription()
      {
        return String.format("protocol file *.%s",
            Names.CAROUSEL_FILE_EXTENTION) ;
      }
    }) ;
  }

  private void load() throws ConfigurationException
  {
    
    String carouselFilePath = this._settings.getCarouselConfFilePath();
    this.carouselFilePathTextField.setText(carouselFilePath);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints ;

    carouselSelectionPanel = new javax.swing.JPanel() ;
    openButton = new javax.swing.JButton() ;
    carouselFilePathTextField = new javax.swing.JTextField() ;
    filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
        new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767)) ;

    setPreferredSize(new java.awt.Dimension(780, 460)) ;
    setLayout(new java.awt.GridBagLayout()) ;

    carouselSelectionPanel.setBorder(
        javax.swing.BorderFactory.createTitledBorder("Carousel type")) ;
    carouselSelectionPanel.setLayout(new java.awt.GridBagLayout()) ;

    openButton.setText("open") ;
    openButton.addActionListener(new java.awt.event.ActionListener()
    {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        openButtonActionPerformed(evt) ;
      }
    }) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    carouselSelectionPanel.add(openButton, gridBagConstraints) ;

    carouselFilePathTextField.setText("write path or click on open button") ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 1 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    carouselSelectionPanel.add(carouselFilePathTextField, gridBagConstraints) ;

    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 0 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 0.1 ;
    gridBagConstraints.weighty = 0.1 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    add(carouselSelectionPanel, gridBagConstraints) ;
    gridBagConstraints = new java.awt.GridBagConstraints() ;
    gridBagConstraints.gridx = 0 ;
    gridBagConstraints.gridy = 1 ;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH ;
    gridBagConstraints.weightx = 1.0 ;
    gridBagConstraints.weighty = 1.0 ;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2) ;
    add(filler1, gridBagConstraints) ;
  }// </editor-fold>

  // Variables declaration - do not modify
  private javax.swing.JTextField carouselFilePathTextField ;
  private javax.swing.JPanel carouselSelectionPanel ;
  private javax.swing.Box.Filler filler1 ;
  private javax.swing.JButton openButton ;
  // End of variables declaration

  private void openButtonActionPerformed(java.awt.event.ActionEvent evt)
  {
    int returnValue = this._fileChooser.showOpenDialog(this) ;
    if (returnValue == JFileChooser.APPROVE_OPTION)
    {
      File file = this._fileChooser.getSelectedFile();
      // Must keep all the paths relatives so as to keep this software movable.
      Path relativeFilePath = Utils.rootDirRelativize(file.toPath());
      this.carouselFilePathTextField.setText(relativeFilePath.toString());
    }
  }                                          
  
  @Override
  public void set() throws ConfigurationException
  {
    String carouselFilePath = this.carouselFilePathTextField.getText();
    this._settings.setCarouselConfFilePath(carouselFilePath);
  }

  @Override
  public void check() throws ConfigurationException
  {
    String carouselFilePath = this.carouselFilePathTextField.getText();
    this._settings.checkCarouselConfFilePath(carouselFilePath);
  }
  
  @Override
  public String getName()
  {
    return CarouselPanel.NAME;
  }
}
