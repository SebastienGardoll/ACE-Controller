AbstractThreadControlTest::test1 - ######### TEST 1 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test1 - *** calling pause on the running thread ****
AbstractThreadControl::askPause - ask the thread to pause
TestToolControlOperations::pauseOperations - execute pause operations
RunningState::pauseTransition - set paused state
AbstractThreadControl::checkPause - the thead is paused
AbstractThreadControlTest::test1 - *** state is: paused ***
AbstractThreadControlTest::test1 - *** calling pause on the thread, again ****
AbstractThreadControl::askPause - ask the thread to pause
AbstractThreadControl::askPause - askPause: nothing to do
AbstractThreadControlTest::test1 - *** it should not do anything ****
AbstractThreadControlTest::test1 - *** calling check pause from main thread ****
AbstractThreadControlTest::test1 - *** main thread unchanged ***
AbstractThreadControlTest::test1 - *** calling check interruption from main thread ****
AbstractThreadControlTest::test1 - *** main thread unchanged ***
AbstractThreadControlTest::test1 - *** calling check cancel from main thread ****
AbstractThreadControlTest::test1 - *** main thread unchanged ***
AbstractThreadControlTest::test1 - *** unpause thread ***
AbstractThreadControl::unPause - resuming the thread
AbstractThreadControl::unPause - waking up the paused thread
AbstractThreadControl::checkPause - the thread is resumed
TestToolControlOperations::resumeOperations - execute resume operations
PausedState::resumeTransition - set running state
SleepingThread::threadLogic - --- alive 4 ---
SleepingThread::threadLogic - --- alive 5 ---
SleepingThread::threadLogic - --- alive 6 ---
SleepingThread::threadLogic - --- alive 7 ---
AbstractThreadControlTest::test1 - *** state is: running ***
AbstractThreadControlTest::test1 - *** calling interrupt on the running thread ****
AbstractThreadControl::run - operations have been interrupted
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) ~[?:?]
	at fr.gardoll.ace.controller.core.SleepingThread.threadLogic(AbstractThreadControlTest.java:366) ~[bin/:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.run(AbstractThreadControl.java:86) [bin/:?]
AbstractState::crash - set crashed state
AbstractThreadControlTest::test1 - *** state is: crashed ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test2 - ######### TEST 2 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test2 - *** calling pause on the running thread ****
AbstractThreadControl::askPause - ask the thread to pause
TestToolControlOperations::pauseOperations - execute pause operations
RunningState::pauseTransition - set paused state
AbstractThreadControl::checkPause - the thead is paused
AbstractThreadControlTest::test2 - *** state is: paused ***
AbstractThreadControlTest::test2 - *** calling interrupt on the paused thread ****
AbstractThreadControl::run - operations have been interrupted
java.lang.RuntimeException: java.lang.InterruptedException
	at fr.gardoll.ace.controller.core.AbstractThreadControl.checkPause(AbstractThreadControl.java:307) ~[bin/:?]
	at fr.gardoll.ace.controller.core.SleepingThread.threadLogic(AbstractThreadControlTest.java:369) ~[bin/:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.run(AbstractThreadControl.java:86) [bin/:?]
Caused by: java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2090) ~[?:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.checkPause(AbstractThreadControl.java:303) ~[bin/:?]
	... 2 more
AbstractState::crash - set crashed state
AbstractThreadControlTest::test2 - *** state is: crashed ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test3 - ######### TEST 3 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test3 - *** calling cancel on the running thread ****
AbstractThreadControl::cancel - ask the thread to cancel
AbstractThreadControl::checkCancel - cancelling the thread
TestToolControlOperations::cancelOperations - execute cancel operations
RunningState::cancelTransition - set initial state
AbstractThreadControlTest::test3 - *** state is: initial ***
AbstractThreadControlTest::test3 - *** calling cancel (again) on the cancelled thread ****
AbstractThreadControl::cancel - ask the thread to cancel
AbstractThreadControl::cancel - nothing to do
AbstractThreadControlTest::test3 - *** it should not do anything ***
AbstractThreadControlTest::test3 - *** state is: initial ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test4 - ######### TEST 4 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test4 - *** calling pause on the running thread ****
AbstractThreadControl::askPause - ask the thread to pause
TestToolControlOperations::pauseOperations - execute pause operations
RunningState::pauseTransition - set paused state
AbstractThreadControl::checkPause - the thead is paused
AbstractThreadControlTest::test4 - *** state is: paused ***
AbstractThreadControlTest::test4 - *** calling cancel on the paused thread ****
AbstractThreadControl::cancel - ask the thread to cancel
AbstractThreadControl::cancel - nothing to do
AbstractThreadControlTest::test4 - *** thread should not be cancelled ***
AbstractThreadControlTest::test4 - *** state is: paused ***
AbstractThreadControlTest::test4 - *** calling interrupt on the paused thread ****
AbstractThreadControl::run - operations have been interrupted
java.lang.RuntimeException: java.lang.InterruptedException
	at fr.gardoll.ace.controller.core.AbstractThreadControl.checkPause(AbstractThreadControl.java:307) ~[bin/:?]
	at fr.gardoll.ace.controller.core.SleepingThread.threadLogic(AbstractThreadControlTest.java:369) ~[bin/:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.run(AbstractThreadControl.java:86) [bin/:?]
Caused by: java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2090) ~[?:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.checkPause(AbstractThreadControl.java:303) ~[bin/:?]
	... 2 more
AbstractState::crash - set crashed state
AbstractThreadControlTest::test4 - *** state is: crashed ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test5 - ######### TEST 5 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test5 - *** calling cancel on the running thread ****
AbstractThreadControl::cancel - ask the thread to cancel
AbstractThreadControl::checkCancel - cancelling the thread
TestToolControlOperations::cancelOperations - execute cancel operations
RunningState::cancelTransition - set initial state
AbstractThreadControlTest::test5 - *** state is: initial ***
AbstractThreadControlTest::test5 - *** calling pause on the cancelled thread ****
AbstractThreadControl::askPause - ask the thread to pause
AbstractThreadControl::askPause - askPause: nothing to do
AbstractThreadControlTest::test5 - *** it should not do anything ****
AbstractThreadControlTest::test5 - *** state is: initial ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test6 - ######### TEST 6 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test6 - *** calling interrupt on the running thread ****
AbstractThreadControl::run - operations have been interrupted
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) ~[?:?]
	at fr.gardoll.ace.controller.core.SleepingThread.threadLogic(AbstractThreadControlTest.java:366) ~[bin/:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.run(AbstractThreadControl.java:86) [bin/:?]
AbstractState::crash - set crashed state
AbstractThreadControlTest::test6 - *** state is: crashed ***
AbstractThreadControlTest::test6 - *** calling pause on the interrupted thread ****
AbstractThreadControl::askPause - ask the thread to pause
AbstractThreadControl::askPause - askPause: nothing to do
AbstractThreadControlTest::test6 - *** it should not do anything ***
AbstractThreadControlTest::test6 - *** state is: crashed ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test7 - ######### TEST 7 #########
SleepingThread::threadLogic - --- alive 0 ---
SleepingThread::threadLogic - --- alive 1 ---
SleepingThread::threadLogic - --- alive 2 ---
SleepingThread::threadLogic - --- alive 3 ---
AbstractThreadControlTest::test7 - *** calling interrupt on the running thread ****
AbstractThreadControl::run - operations have been interrupted
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method) ~[?:?]
	at fr.gardoll.ace.controller.core.SleepingThread.threadLogic(AbstractThreadControlTest.java:366) ~[bin/:?]
	at fr.gardoll.ace.controller.core.AbstractThreadControl.run(AbstractThreadControl.java:86) [bin/:?]
AbstractState::crash - set crashed state
AbstractThreadControlTest::test7 - *** state is: crashed ***
AbstractThreadControlTest::test7 - *** calling cancelled on the interrupted thread ****
AbstractThreadControl::cancel - ask the thread to cancel
AbstractThreadControl::cancel - nothing to do
AbstractThreadControlTest::test7 - *** it should not do anything ***
AbstractThreadControlTest::test7 - *** state is: crashed ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test8 - ######### TEST 8 #########
AbstractThreadControlTest::test8 - *** just waiting for the thread ****
AbstractThreadControl::await - wait until 2020-01-07T15:15:25.720998Z
AbstractThreadControl::await - waiting 4992 ms
AbstractThreadControl::await - wait done
RunningState::done - set ready state
AbstractThreadControlTest::test8 - *** state is: ready ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test9 - ######### TEST 9 #########
AbstractThreadControl::await - wait until 2020-01-07T15:15:30.737050Z
AbstractThreadControl::await - waiting 5000 ms
AbstractThreadControlTest::test9 - *** calling cancel on the awaiting thread ****
AbstractThreadControl::cancel - ask the thread to cancel
AbstractThreadControl::checkCancel - cancelling the thread
TestToolControlOperations::cancelOperations - execute cancel operations
RunningState::cancelTransition - set initial state
AbstractThreadControlTest::test9 - *** state is: initial ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test10 - ######### TEST 10 #########
AbstractThreadControl::await - wait until 2020-01-07T15:15:31.746504Z
AbstractThreadControl::await - waiting 5000 ms
AbstractThreadControlTest::test10 - *** calling pause on the awaiting thread ****
AbstractThreadControl::askPause - ask the thread to pause
TestToolControlOperations::pauseOperations - execute pause operations
RunningState::pauseTransition - set paused state
AbstractThreadControl::checkPause - the thead is paused
AbstractThreadControlTest::test10 - *** calling unpause before deadline meeting ****
AbstractThreadControl::unPause - resuming the thread
AbstractThreadControl::unPause - waking up the paused thread
AbstractThreadControl::checkPause - the thread is resumed
TestToolControlOperations::resumeOperations - execute resume operations
PausedState::resumeTransition - set running state
AbstractThreadControl::await - waiting 1989 ms
AbstractThreadControl::await - wait done
RunningState::done - set ready state
AbstractThreadControlTest::test10 - *** state is: ready ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test11 - ######### TEST 11 #########
AbstractThreadControl::await - wait until 2020-01-07T15:15:36.753132Z
AbstractThreadControl::await - waiting 5000 ms
AbstractThreadControlTest::test11 - *** calling pause on the awaiting thread ****
AbstractThreadControl::askPause - ask the thread to pause
TestToolControlOperations::pauseOperations - execute pause operations
RunningState::pauseTransition - set paused state
AbstractThreadControl::checkPause - the thead is paused
AbstractThreadControlTest::test11 - *** calling unpause after deadline meeting ****
AbstractThreadControl::unPause - resuming the thread
AbstractThreadControl::unPause - waking up the paused thread
AbstractThreadControl::checkPause - the thread is resumed
TestToolControlOperations::resumeOperations - execute resume operations
PausedState::resumeTransition - set running state
AbstractThreadControl::await - wait done
RunningState::done - set ready state
AbstractThreadControlTest::test11 - *** state is: ready ***
AbstractThreadControlTest::teardown - *** end of test ***
AbstractThreadControlTest::test12 - ######### TEST 12 #########
SelfPausedThread::threadLogic - trigger self pause
AbstractThreadControl::askPause - ask the thread to pause
TestToolControlOperations::pauseOperations - execute pause operations
RunningState::pauseTransition - set paused state
AbstractThreadControl::checkPause - the thead is paused
AbstractThreadControlTest::test12 - *** calling unpause on the selfpaused thread ****
AbstractThreadControl::unPause - resuming the thread
AbstractThreadControl::unPause - waking up the paused thread
AbstractThreadControl::checkPause - the thread is resumed
TestToolControlOperations::resumeOperations - execute resume operations
PausedState::resumeTransition - set running state
RunningState::done - set ready state
AbstractThreadControlTest::test12 - *** state is: ready ***
AbstractThreadControlTest::teardown - *** end of test ***
